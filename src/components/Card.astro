---
interface Props {
	title: string;
	body: string;
	region: string;
	route: string;
	type: string;
	chartData: string;
}

const { title, region, body, route, type, chartData } = Astro.props;

async function fetchColo(route) {
	if (type === "fetch") {
		try {
			const response = await fetch(route, { method: 'HEAD' });
			const cfRayHeader = response.headers.get('CF-RAY')
			const lastThreeCharacters = cfRayHeader.slice(-3)
			return `"colo": "${lastThreeCharacters}`
		} catch (error) {
			console.log(error);
			return error
		}
	} else {
		try {
			const response = await fetch(route);
			const data = await response.text();
			return data
		} catch (error) {
			console.log(error);
			return error
		}
	}
}
const codeOutput = fetchColo(route);

async function getData(route) {
	if (type === "data") {
		const response = await fetch(route);
		const data = await response.text();
		return data
	}
}
const chartOutput = await getData(route);
---

<li class="link-card">
	<div>
		<h2>
			{title}
		</h2>
		<div class="region-label">
        	{region}
    	</div>
		<p>
			{body}
		</p>
		<code>
			{codeOutput !== null ? codeOutput : 'Error executing code'}
			{chartOutput !== null ? chartOutput : 'Error executing code'}
		</code>
	</div>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #ececec;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: black;
		background-color: #fff;
		opacity: 0.8;
		cursor: default;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		color: #FF6633;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.region-label {
		color: #0051c3;
		font-weight: bold;
		font-size: 0.85rem;
		display: inline-block;
		margin-top: 10px;
		padding: 4px 16px;
		background-color: #ececec; /* Background color */
		border-radius: 15px;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: #0051c3;
	}
	p {
		font-size: 0.95rem;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
</style>